#!/usr/bin/env python2

import sys
import string

from ecell.eml import *

def convertFQEN2SystemID( aFQEN ):
    aPathToSystem = aFQEN.split( ':' )[0]
    aSystemSimpleID = aFQEN.split( ':' )[1]

    if ( aPathToSystem == '/' ):
        aSystemID = '/' +aSystemSimpleID
    else:
        asystemID = aPathToSystem + '/' +aSystemSimpleID
    return aSystemID

if __name__ == '__main__':
    aFilename = sys.argv[1]
    aFile = open( aFilename )
    s = aFile.readlines()

test = []
for l in s:
     w = l.split('\t')
     test.append(w)
#print test

anEml = Eml()

anEml.createStepper( 'Euler1Stepper', 'SRM_01')

for anEriLine in test:
    if ( anEriLine[0] == 'SYSTEM' ):
        # aSystemID = convertFQEN2SystemID( line[2] )
        if ( anEriLine[2] == '/:ENVIRONMENT' ):
            aSystemFullID = 'System::/'
        else:
            aSystemFullID = 'System:' +anEriLine[2]

        anEml.createEntity( 'System', aSystemFullID )
        anEml.setEntityProperty( aSystemFullID, 'StepperID', ['SRM_01'] )
        anEml.setEntityProperty( aSystemFullID, 'Name', anEriLine[3:4] )
        
    elif ( anEriLine[0] == 'SUBSTANCE' ):
        aSystemFullID = 'Substance:' +anEriLine[2]
        anEriChunk = anEriLine[4].split()
        anEml.createEntity( 'Substance', aSystemFullID )
        anEml.setEntityProperty( aSystemFullID, anEriChunk[0], anEriChunk[1:] )
        anEml.setEntityProperty( aSystemFullID, 'Name', anEriLine[3:4] )
        
    elif ( anEriLine[0] == 'REACTOR' ):
        aSystemFullID = 'Reactor:' +anEriLine[2]
        if ( anEriLine[1] == 'ConstantParameterReactor' ):
            aSystemID = anEriLine[2].split(':')[0]
            print aSystemID
            if ( aSystemID == '/ENVIRONMENT'):
                aSystemFullID = 'System::/'
            else:
                # aSystemFullID = 'System:' +aSystemID
                aSystemFullID = anEml.convertSystemID2SystemFullID( aSystemID )
            print aSystemFullID
                
            anEriChunk = anEriLine[4].split()
            anEml.setEntityProperty( aSystemFullID, 'Volume', anEriChunk[1:] )
        else:            
            anEml.createEntity( anEriLine[1], aSystemFullID )
            anEml.setEntityProperty( aSystemFullID, 'Name', anEriLine[3:4] )
            # print anEriLine[4:]
            aReactantList = []
            aSubstrateNumber = 0
            aProductNumber = 0
            aCatalystNumber = 0
            anEffectorNumber =0
        
            for anEriChunk in anEriLine[4:]:
                anEriChunkElement = anEriChunk.split()
                if ( anEriChunkElement[0] == 'Substrate' ):
                    aSubstrateList = []
                    aSubstrateList.append( 'S' + str(aSubstrateNumber) )
                    aSubstrateNumber = aSubstrateNumber + 1
                    aSubstrateList.append( 'Substance:' + anEriChunkElement[1])
                    aSubstrateList.append( str(-1 * int(anEriChunkElement[2])) )
                    aReactantList.append( aSubstrateList )
#                    anEml.setEntityProperty( aSystemFullID, 'ReactantList', aReactantList )
                    # print aReactantList
                    # print anEriChunkElement[0]
                elif ( anEriChunkElement[0] == 'Product' ):
                    aProductList = []
                    aProductList.append( 'P' + str(aProductNumber) )
                    aProductNumber = aProductNumber + 1
                    aProductList.append( 'Substance:' + anEriChunkElement[1])
                    aProductList.append( str(1 * int(anEriChunkElement[2])) )
                    aReactantList.append( aProductList )
#                    anEml.setEntityProperty( aSystemFullID, 'ReactantList', aReactantList )
                elif ( anEriChunkElement[0] == 'Catalyst' ):
                    aCatalystList = []
                    aCatalystList.append( 'C' + str(aCatalystNumber) )
                    aCatalystNumber = aCatalystNumber + 1
                    aCatalystList.append( 'Substance:' + anEriChunkElement[1])
                    aCatalystList.append( '0' )
                    aReactantList.append( aCatalystList )
#                    anEml.setEntityProperty( aSystemFullID, 'ReactantList', aReactantList )
                elif ( anEriChunkElement[0] == 'Effector' ):
                    anEffectorList = []
                    anEffectorList.append( 'E' + str(anEffectorNumber) )
                    anEffectorNumber = anEffectorNumber + 1
                    anEffectorList.append( 'Substance:' + anEriChunkElement[1])
                    anEffectorList.append( '0' )
                    aReactantList.append( anEffectorList )
#                   anEml.setEntityProperty( aSystemFullID, 'ReactantList', aReactantList )
                else:
                    # print anEriChunkElement[0]
                    # print anEriChunkElement[1:]
                    anEml.setEntityProperty( aSystemFullID, anEriChunkElement[0], anEriChunkElement[1:] )
            anEml.setEntityProperty( aSystemFullID, 'ReactantList', aReactantList )
    else: 
            pass

anEml.save('test1.eml')
aString = anEml.asString()

print aString


