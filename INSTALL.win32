$Id$ 

Installation notes for E-Cell Simulation Environment Version 3 (E-Cell SE 3)
on MS Windows32

Satya Nanda Vel Arjunan  <satya.arjunan@gmail.com>

== Getting the latest version of E-Cell 3 ==

1. Get source code via CVS:

   Official development site of E-Cell 3 is:

    http://www.e-cell.org/software

   You can get the latest CVS version anonymously.  See this page
   for CVS instructions:

    http://sf.net/cvs/?group_id=72485

2. Get tarball:

   Check the same URL as 1.

=== E-Cell Windows Compilation and Installer Packaging Guide ===
----
'''Downloads:'''
 1. MinGW Sourceforge filelist: http://sourceforge.net/project/showfiles.php?group_id=2435
    i. MinGW-5.0.0.exe
    i. MSYS-1.0.11-2004.03.30-1.exe
    i. msysDTK-1.0.1.exe
 1. pexports from http://starship.python.net/crew/kernr/mingw32/pexports-0.42h.zip
 1. GTK+ Runtime (gtk-win32-2.8.8-rc2.exe) and development (gtk-win32-devel-2.8.8-rc2.exe) from http://gladewin32.sourceforge.net/
 1. Python-2.4.2.msi from http://www.python.org/
 1. Numeric-24.2.win32-py2.4.exe from http://sourceforge.net/project/showfiles.php?group_id=1369&release_id=144555
 1. py2exe-0.6.5.win32-py2.4.exe from http://starship.python.net/crew/theller/py2exe/
 1. gsl-1.7.tar.gz from http://mirrors.rcn.net/pub/sourceware/gsl/
 1. boost_1_33_1.tar.bz2 from http://sourceforge.net/project/showfiles.php?group_id=7586
 1. boost-jam-3.1.11-1-ntx86.zip from http://sourceforge.net/project/showfiles.php?group_id=7586
 1. pygtk-2.8.2.tar.bz2 from http://ftp.gnome.org/pub/GNOME/sources/pygtk/
 1. libgnomecanvas-2.12.0.tar.bz2 from http://ftp.gnome.org/pub/GNOME/sources/libgnomecanvas/
 1. gnome-python-2.12.2.tar.bz2 from http://ftp.gnome.org/pub/GNOME/sources/gnome-python/
 1. xerces-c-current.tar.gz from http://xml.apache.org/xerces-c/download.cgi
 1. libsbml-2.3.4.zip http://www.sbml.org/software/sbmltoolbox/
 1. swig-1.3.22.tar.gz from http://www.swig.org/index.html
 1. libtool from http://www.gnu.org/software/libtool/libtool.html
 1. svn-win32-1.3.1.zip from http://subversion.tigris.org/servlets/ProjectDocumentList?folderID=91
   

----
'''E-Cell Windows Development Environment Creation Steps:'''
 1. Install MinGW (MinGW-5.0.0.exe) in D:\development\MinGW
    i. select candidate version
    i. select to install MinGW base tools, g++ compiler and MinGW make
    i. once installed: 
        * cp -r /d/development/MinGW /d/development/ecell3windows/runtime/1.mingw
        * delete all subdirectories under 1.ming except bin, include and lib
 1. Extract pexports.exe into D:\development\MinGW\bin directory
 1. Install MSYS-1.0.11-2004.03.30-1.exe in D:\development\MSYS: during post install, give the location of MinGW as D:\development\MinGW
 1. Install msysDTK (msysDTK-1.0.1.exe) in  D:\development\MSYS (this is for automake, libtool etc)
 1. Extract svn-win32-*.zip into D:\development\MSYS
 1. Install GTK- Devel (gtk-win32-devel-2.8.8-rc2.exe) in D:\development\GTK register for MSYS
 1. Install Python (python-2.4.2.msi) in  D:\development\Python24
 1. Install Numerical Python (Numeric-24.2.win32-py2.4.exe) in D:\development\Python24
    i. mkdir /d/development/ecell3windows/pythonModules/1.numeric/lib/python2.4
    i. cp -r /d/development/Python24/Lib/site-packages /d/development/ecell3windows/pythonModules/1.numeric/lib/python2.4
 1. Install Py2exe (py2exe-0.6.5.win32-py2.4.exe) in D:\development\Python24
 1. As administrator edit the Path environment variable from:
    * Settings->Control Panel->System->Advanced->Environment Variables->Path->Edit
    * The following is the partial content of Path:
      * D:\development\Python24;D:\development\Python24\include;D:\development\MinGW\bin;D:\development\MinGW\lib;

 1. Start MSYS, search the file python24.dll in C:\WINDOWS\system32 folder
    i. $ pexports python23.dll > python23.def
    i. $ dlltool --dllname python23.dll --def python23.def --output-lib libpython23.a
    i. $ cp libpython23.a to D:\development\MinGW\lib
 1. cp -r /d/development/Python24/include/* /d/development/MinGW/include
 1. Install cvs Autoconf and Automake
 1. Install libtool (libtool-2.1a.tar.gz)
    i. rm -rf /d/development/MSYS/etc/config.site (causes the bug "not configured to extract global symbols from dlpreopened files")
    i. CXXFLAGS="-O3 -fno-rtti" CFLAGS="-O3" LDFLAGS="-Wl,-s" ./configure --prefix=/usr
    i. make
    i. make install

 1. Install gsl (gsl-1.7.tar.gz)
    i. in topdir/Makefile.in
       * libgsl_la_LIBADD = -Lcblas -lgslcblas $(SUBLIBS)
       * libgsl_la_LDFLAGS = -version-info $(GSL_LT_VERSION) -no-undefined
    i. in topdir/cblas/Makefile.in
       * libgslcblas_la_LDFLAGS = -version-info $(GSL_LT_CBLAS_VERSION) -no-undefined
    i. for i386: CXXFLAGS="-O3 -fno-rtti" CFLAGS="-O3" LDFLAGS="-Wl,-s" ./configure --prefix=/d/development/ecell3windows/runtime/i386/5.gsl
    i. for sse2: CXXFLAGS="-O3 -mfpmath=sse -msse2 -fno-rtti" CFLAGS="-O3 -mfpmath=sse -msse2" LDFLAGS="-Wl,-s" ./configure --prefix=/d/development/ecell3windows/runtime/sse2/5.gsl
    i. cp /bin/libtool .
    i. make 
    i. make install 
    i. cp -r /d/development/ecell3windows/runtime/i386/5.gsl/* /d/development/MinGW

 1. [Optional -- don't do this if you had already installed the Numerical Python binaries] Install Numerical Python
    i. to create installer: python setup.py build --compiler=mingw32 bdist_wininst
    i. to install in a location: python setup.py build --compiler=mingw32 install --prefix='D:\development\ecell3windows\pythonModules\1.Numeric'
    i. mkdir /d/development/ecell3windows/pythonModules/1.Numeric/lib/python2.4
    i. mv /d/development/ecell3windows/pythonModules/1.Numeric/lib/site-packages /d/development/ecell3windows/pythonModules/1.Numeric/lib/python2.4

 1. Install boost_1_33_1
    i. extract boost-jam-3.1.11-1-ntx86.zip to D:\development\MinGW\bin
    i. extract boost_1_33_1_beta.tar.bz2 to /home/satya
    i. cp -R topdir/boost /usr/include
    i. cd topdir\libs\python\build
    i. export MINGW_ROOT_DIRECTORY="D:\development\MinGW"
    i. export PYTHON_ROOT="D:\development\Python24"
    i. export PYTHON_VERSION="2.4"
    i. for i386:
       a. bjam "-sTOOLS=mingw" "-sBUILD=release <linkflags>-Wl,-s"
       a. cd topdir/libs/python/build/bin-stage/
       a. mkdir /d/development/ecell3windows/runtime/i386/4.boost
       a. mkdir /d/development/ecell3windows/runtime/i386/4.boost/bin
       a. mkdir /d/development/ecell3windows/runtime/i386/4.boost/lib
       a. mkdir /d/development/ecell3windows/runtime/i386/4.boost/include
       a. cp boost_python.dll /d/development/ecell3windows/runtime/i386/4.boost/bin
       a. pexports boost_python.dll > boost_python.def
       a. dlltool --dllname boost_python.dll --def boost_python.def --output-lib libboost_python.a
       a. cp libboost_python.a /d/development/ecell3windows/runtime/i386/4.boost/lib
       a. cp -r topdir/boost /d/development/ecell3windows/runtime/i386/4.boost/include
    i. cp -r /d/development/ecell3windows/runtime/i386/4.boost/* /d/development/MinGW

 1. Install libgnomecanvas-2.12.0.tar.bz2
    i. mkdir /target
    i. add "d:/development/GTK /target" in /etc/fstab, restart MSYS
    i. for i386: CXXFLAGS="-O3 -fno-rtti" CFLAGS="-O3" LDFLAGS="-Wl,-s" ./configure --prefix=/d/development/ecell3windows/runtime/i386/6.libgnomecanvas
    i. for sse2: CXXFLAGS="-O3 -mfpmath=sse -msse2 -fno-rtti" CFLAGS="-O3 -mfpmath=sse -msse2" LDFLAGS="-Wl,-s" ./configure --prefix=/d/development/ecell3windows/runtime/sse2/6.libgnomecanvas
    i. cp /bin/libtool .
    i. make && make install
    i. cp -r /d/development/ecell3windows/runtime/i386/6.libgnomecanvas/* /d/development/GTK

 1. Install pygtk-2.8.2.tar.bz2
    i. for i386: CXXFLAGS="-O3 -fno-rtti" CFLAGS="-O3" LDFLAGS="-Wl,-s" ./configure --prefix=/d/development/ecell3windows/pythonModules/i386/2.pygtk
    i. for sse2: CXXFLAGS="-O3 -mfpmath=sse -msse2 -fno-rtti" CFLAGS="-O3 -mfpmath=sse -msse2" LDFLAGS="-Wl,-s" ./configure --prefix=/e/ecell3windows/pythonModules/sse2/2.pygtk
    i. vi topdir/Makefile, topdir/gobject/Makefile, topdir/tests/Makefile and topdir/gtk/Makefile
       * add -lpython24 to all occurrences of "-lintl -liconv"
       * replace all occurrences of d:\development\Python24... with /d/development/Python24...
       * add -mms-bitfields to CFLAGS in both the makefiles
       * remove all occurrences of -export-symbols-regex xxx
    i. cp /bin/libtool .
    i. make
    i. mv /d/development/Python24/Lib/site-packages /d/development/Python24/Lib/site
    i. make install
    i. rm -rf /d/development/ecell3windows/pythonModules/i386/2.pygtk/lib/pygtk
    i. cp -r /d/development/ecell3windows/pythonModules/i386/2.pygtk/* /d/development/GTK
    i. mkdir /d/development/ecell3windows/pythonModules/i386/2.pygtk/lib/python2.4
    i. mv /d/development/Python24/Lib/site-packages /d/development/ecell3windows/pythonModules/i386/2.pygtk/lib/python2.4
    i. mv /d/development/Python24/Lib/site /d/development/Python24/Lib/site-packages/
    i. cp -r /d/development/ecell3windows/pythonModules/i386/2.pygtk/lib/python2.4/site-packages/* /d/development/Python24/Lib/site-packages

 1. Install gnome-python-2.12.2.tar.bz2
    i. install autoconf-2.59.tar.bz2 or later
    i. in topdir/configure.in replace
                PKG_CHECK_MODULES(GNOME, libgnome-2.0 >= libgnome_required_version,,
                  [AC_MSG_ERROR(libgnome-2.0 is required.)])
                AC_SUBST(GNOME_CFLAGS)
                AC_SUBST(GNOME_LIBS)
                if test -n "$export_dynamic"; then
                  GNOME_LIBS=`echo $GNOME_LIBS | sed -e "s/$export_dynamic//"`
                fi
       with:
                build_gnome=false
                PKG_CHECK_MODULES(GNOME, libgnome-2.0 >= libgnome_required_version,
                  build_gnome=true,build_gnome=false)
                AC_SUBST(GNOME_CFLAGS)
                AC_SUBST(GNOME_LIBS)
                AM_CONDITIONAL(BUILD_GNOME, $build_gnome)
                if test -n "$export_dynamic"; then
                  GNOME_LIBS=`echo $GNOME_LIBS | sed -e "s/$export_dynamic//"`
                fi
    i. autoconf (replace old configure script with a new one from the extracted file)
    i. export PKG_CONFIG=/target/bin/pkg-config.exe
    i. export PKG_CONFIG_PATH=/target/lib/pkgconfig 
    i. cp -r /d/development/GTK/share / (required for aclocal)
    i. for i386: CXXFLAGS="-O3 -fno-rtti" CFLAGS="-O3" LDFLAGS="-Wl,-s" ./configure --prefix=/d/development/ecell3windows/pythonModules/i386/3.gnome-python
    i. for sse2: CXXFLAGS="-O3 -mfpmath=sse -msse2 -fno-rtti" CFLAGS="-O3 -mfpmath=sse -msse2" LDFLAGS="-Wl,-s" ./configure --prefix=/d/development/ecell3windows/pythonModules/sse2/3.gnome-python
        * it should say that it will only compile gnomecanvas
    i. make (it will run configure again due to changes in configure.in and will die because of errors in gnome compilation)
    i. cp /bin/libtool .
    i. edit gnome/Makefile.am such that only the followings are remaining (remove all the compilation of source files):
                INCLUDES = $(PYTHON_INCLUDES) $(PYGTK_CFLAGS)

                defsdir = $(datadir)/pygtk/2.0/defs
                defs_DATA = \
                  gnome.defs \
                  gnome-types.defs \
                  ui.defs

                EXTRA_DIST = $(defs_DATA)

                pyexecdir = /d/development/Python24/lib/site-packages
                pythondir = /d/development/Python24/lib/site-packages

                pkgpythondir = $(pyexecdir)/gtk-2.0
                pkgpyexecdir = $(pyexecdir)/gtk-2.0

                common_ldflags = -module -avoid-version -no-undefined

                pygnomedir = $(pkgpythondir)/gnome
                pygnome_PYTHON = __init__.py canvas.py vfs.py


                install-exec-hook: # Remove old deprecated modules
                        -$(LIBTOOL) --mode=uninstall rm -f $(pygnomeexecdir)/canvas.la
                        -$(LIBTOOL) --mode=uninstall rm -f $(pygnomeexecdir)/vfs.la
    i. edit topidr/gnomecanvas/Makefile
       * add -lpython23 to all occurrences of "-lintl -liconv"
       * replace all occurrences of d:\development\Python24... with /d/development/Python24...
       * add -mms-bitfields to CFLAGS
       * remove all occurrences of -export-symbols-regex xxxx 
       * add -no-undefined in common_ldflags
    i. make
    i. edit topdir/gnome/__init__.py and remove:
        from _gnome import *
        init = program_init
    i. mv /d/development/Python24/Lib/site-packages /d/development/Python24/Lib/site
    i. make install
    i. cp -r /d/development/ecell3windows/pythonModules/i386/3.gnome-python/* /d/development/GTK
    i. mkdir /d/development/ecell3windows/pythonModules/i386/3.gnome-python/lib/python2.4
    i. mv /d/development/Python24/Lib/site-packages /d/development/ecell3windows/pythonModules/i386/3.gnome-python/lib/python2.4
    i. mv /d/development/Python24/Lib/site /d/development/Python24/Lib/site-packages/
    i. cp -r /d/development/ecell3windows/pythonModules/i386/3.gnome-python/lib/python2.4/site-packages/* /d/development/Python24/Lib/site-packages

 1. Install xerces-2.7.0
    i. cd $topdir/src/xercesc
    i. export XERCESCROOT=$topdir (export XERCESCROOT=/home/satya/xerces-c-src_2_7_0)
    i. CXXFLAGS="-O3 -fno-rtti" CFLAGS="-O3" LDFLAGS="-Wl,-s" ./runConfigure -c gcc -x g++ -p mingw-msys -n fileonly -P /d/development/ecell3windows/runtime/i386/7.xerces-c
    i. make && make install
    i. cd /d/development/ecell3windows/runtime/i386/13.xerces-c/lib
    i. pexports libxerces-c.dll > libxerces-c.def
    i. dlltool --dllname libxerces-c.dll --def libxerces-c.def --output-lib libxerces-c.a
    i. cp -r /d/development/ecell3windows/runtime/i386/7.xerces-c/* /d/development/MinGW

 1. Install swig-1.3.22
    i. ./configure --prefix=/d/development/MinGW
    i. make
    i. make install

 1. Install libsbml-2.3.4
    i. in topdir src/common/extern.h remove
       * __declspec(dllexport) and __declspec(dllimport)
    i. ./configure --prefix='d:\\development\\ecell3windows\\pythonModules\\i386\\4.libsbml' --with-xerces=/d/development/MinGW --with-python --with-swig
    i. in topdir/config/make-common-vars.mk:
         replace lpython2.4 with lpython24
         SWIGFLAGS = -I/d/development/MinGW/share/swig/1.3.27 -I/d/development/MinGW/share/swig/1.3.27/python
    i. in topdir/src/bindings/python/Makefile.in
         replace "perl -pi" with "perl -p"
    i. make
    i. make install
    i. mkdir /d/development/ecell3windows/pythonModules/i386/4.libsbml/lib/python2.4
    i. mv /d/development/ecell3windows/pythonModules/i386/4.libsbml/lib/libsbml /d/development/ecell3windows/pythonModules/i386/4.libsbml/lib/libsbml.dll
    i. mv /d/development/ecell3windows/pythonModules/i386/4.libsbml/lib/site-packages/_libsbml /d/development/ecell3windows/pythonModules/i386/4.libsbml/lib/site-package/_libsbml.dll
    i. mv /d/development/ecell3windows/pythonModules/i386/4.libsbml/lib/site-packages /d/development/ecell3windows/pythonModules/i386/4.libsbml/lib/python2.4

 1. Install E-Cell
    i. svn co https://svn.sourceforge.net/svnroot/ecell/ecell3/trunk ecell3 
    i. cd ecell3
    i. ./autogen.sh
    i. for i386: CXXFLAGS="-O3" CFLAGS="-O3" LDFLAGS="-Wl,-s" ./configure --prefix=/d/development/ecell3windows/ecell3-i386
    i. for sse2: CXXFLAGS="-O3 -mfpmath=sse -msse2" CFLAGS="-O3 -mfpmath=sse -msse2" LDFLAGS="-Wl,-s" ./autogen.sh --prefix=/d/development/ecell3windows/ecell3-sse2
    i. edit topdir/ecell/pyecs/Makefile and topdir/ecell/pyecell/ecell/Makefile
          * replace all occurrences of d:\development\Python24... with /d/development/Python24...
    i. cp /bin/libtool .
    i. vi ./libtool and remove first two occurrences of -DDLL_EXPORT
    i. cp ./libtool ecell
    i. cp ./libtool dmtool
    i. cp ./libtool libltdl
    i. make
    i. mv /d/development/Python24/Lib/site-packages /d/development/Python24/Lib/site
    i. make install
    i. mkdir /d/development/ecell3windows/ecell3-i386/lib/python2.4
    i. mv /d/development/Python24/Lib/site-packages /d/development/ecell3windows/ecell3-i386/lib/python2.4
    i. mv /d/development/Python24/Lib/site /d/development/Python24/Lib/site-packages/
    i. cp -r /d/development/ecell3windows/ecell3-i386/lib/python2.4/site-packages/* /d/development/Python24/Lib/site-packages
----
'''E-Cell Windows Installer Packaging Steps:'''
{{{
Directory structure used for packaging under e:\ecell3windows:

d:\development\ecell3windows
|-- dontCopy
|-- ecell3-i386
|   |-- bin
|   |-- include
|   |-- lib
|   `-- share
|-- pythonModules
|   |-- 1.Numeric
|   |   `-- lib
|   |       `-- python2.4
|   |           `-- site-packages
|   |               `-- Numeric
|   |                   |-- FFT
|   |                   |-- MA
|   |                   `-- RNG
|   `-- i386
|       |-- 2.pygtk
|       |   `-- lib
|       |       `-- python2.4
|       |           `-- site-packages
|       |               `-- gtk-2.0
|       |                   `-- gtk
|       |-- 3.gnome-python
|       |   `-- lib
|       |       `-- python2.4
|       |           `-- site-packages
|       |               `-- gtk-2.0
|       `-- 4.libsbml
|           `-- lib  
|               `-- python2.4 
|                   `-- site-packages
|                       `-- libsbml
`-- runtime
    |-- 1.MinGW
    |   |-- bin
    |   |-- include
    |   |-- lib 
    |   `-- libexec
    |-- 2.msys-cp.find.grep.ls.mkdir.mv.rm
    |   |-- bin
    |   `-- etc
    |-- 3.ecell3-docs
    |   `-- share
    |       `-- doc
    |           |-- refman
    |           `-- users-manual
    `-- i386
        |-- 4.boost
        |   |-- bin
        |   |-- include
        |   `-- lib
        |-- 5.gsl
        |   |-- bin
        |   |-- include
        |   `-- lib
        |-- 6.libgnomecanvas
        |   |-- bin
        |   `-- lib
        |-- 7.xerces-c
        |   |-- include
        |   `-- lib
        `-- 8.ecell3-samples
            `-- share
                `-- doc
                    `-- sample
                        |-- CoupledOscillator
                        |-- Drosophila
                        |-- Drosophila-cpp
                        |-- Heatshock
                        |-- LTD
                        |-- Pendulum
                        |-- SSystem
                        |-- Toy_Hybrid
                        |-- branchG
                        |-- ga
                        |-- sessionmanager
                        `-- simple
}}}

Install/extract the following libraries/packages according to the above directory structure.
 A. In directory e:\ecell3windows\runtime (Runtime binaries used by E-Cell)
    1. 2.msys-cp.find.grep.ls.mkdir.mv.rm: command line interface (cp,find,grep,ls,mkdir,mv,rm and msys-1.0.dll from MSYS-1.0.11-2004.04.30-1.exe)
    1. ecell3-samples (create the .dll and .eml for all samples)
    1. ecell3-docs
       i. on a Linux machine, in ecell3 topdir, make doc-install
       i. copy the directory {prefix}/share/doc/{VERSION}/refman and {prefix}/share/doc/{VERSION}/users-manual into ecell3-docs/share/doc
       i. remove ecell3-docs\share\doc\refman\latex and ecell3-docs\share\doc\refman\refman.html.tgz
       i. remove ecell3-docs\share\doc\users-manual\ecell3-users-manual.junk ecell3-docs\share\doc\users-manual\*.xml
 A. In directory /d/development/ecell3windows/dontCopy (these files are used by the E-Cell setup wizard, but are not copied onto the host system)
    1. pexports.exe from MinGW/bin
    1. gtk-win32-2.8.8-rc2.exe
    1. python-2.4.2.msi
 A. In /d/development/ecell3windows/ecell3-i386 (E-Cell 3 libraries), remove the following libraries:
    1. lib/libecs.a
    1. lib/libemc.a
    1. lib/python2.4/site-packages/ecell/_ecs.a
    1. lib/python2.4/site-packages/ecell/_emc.a
    1. lib/python2.4/site-packages/ecell/_tableio.a

----
'''Create the E-Cell Installer'''
 1. Download Inno Setup Quick''''''Start Pack 4.2.2 (comes with ISTool script editor and Inno Setup Preprocessor) from http://www.jrsoftware.org/isdl.php#qsp and install it
 1. Open d:\development\ecell3windows\ecell3-i386\ecell3-installer.iss using Inno Setup Compiler
 1. Define what type of E-Cell installer should be compiled:
    * #define Full''''''Install : compile E-Cell setup together with Python and GTK
    * ;#define Full''''''Install : compile E-Cell setup only
 1. Set the target architecture by commenting and uncommenting the appropriate Arch variable
    * #define Arch     'sse2'
    * #define Arch     'i386'
 1. Define the filenames of Python''''''Setup and Gtk''''''Setup if newer versions are used
 1. In the [Setup] section
    i. set Compression=None during development/test compilation.
    i. set Compression=lzma/ultra for releases.
 1. Compile the script
 1. The compiled installer will appear in the root directory of the script file, d:\development\ecell3windows\ecell3-i386

You are done!! ;)
