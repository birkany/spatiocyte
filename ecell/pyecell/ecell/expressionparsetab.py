#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
#       This file is part of the E-Cell System
#
#       Copyright (C) 1996-2008 Keio University
#       Copyright (C) 2005-2008 The Molecular Sciences Institute
#
#::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
#
# E-Cell System is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
# 
# E-Cell System is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public
# License along with E-Cell System -- see the file COPYING.
# If not, write to the Free Software Foundation, Inc.,
# 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
# 
#END_HEADER

# expressionparsetab.py
# This file is automatically generated. Do not edit.

_lr_method = 'SLR'

_lr_signature = '\x13j\x16\x8d\xa33"w|h\x11)h;\x1a\x86'

_lr_action_items = {'DIVIDE':([26,25,2,24,9,1,7,31,18,27,33,29,22,4,34,28,20,3,12,],[-6,-5,-13,-8,-9,-11,13,-18,-7,-4,-17,13,13,-10,13,13,-19,-12,13,]),'RPAREN':([31,23,9,1,24,34,33,2,25,18,11,26,12,3,27,20,4,28,21,29,22,],[-18,-16,-9,-11,-8,-14,-17,-13,-5,-7,-20,-6,24,-12,-4,-19,-10,-2,31,-3,-15,]),'NAME':([13,30,15,6,32,14,16,8,0,11,10,17,],[2,33,2,2,2,2,2,2,2,2,20,2,]),'POWER':([31,7,9,24,2,25,18,34,26,33,12,3,1,20,4,28,29,27,22,],[-18,14,-9,-8,-13,14,-7,14,-6,-17,14,-12,-11,-19,-10,14,14,14,14,]),'NUMBER':([14,32,15,13,17,11,6,8,0,16,],[3,3,3,3,3,3,3,3,3,3,]),'TIMES':([22,29,4,28,20,3,27,12,26,18,25,2,24,9,1,7,33,34,31,],[15,15,-10,15,-19,-12,-4,15,-6,-7,-5,-13,-8,-9,-11,15,-17,15,-18,]),'COLON':([33,25,2,3,18,11,26,23,31,1,9,24,34,21,29,22,27,28,20,4,],[-17,-5,-13,-12,-7,-20,-6,-16,-18,-11,-9,-8,-14,32,-3,-15,-4,-2,-19,-10,]),'LPAREN':([32,6,15,14,20,13,11,2,17,16,0,8,],[6,6,6,6,11,6,6,11,6,6,6,6,]),'PLUS':([31,33,7,1,9,24,34,28,2,25,18,22,12,27,3,26,20,4,29,],[-18,-17,16,-11,-9,-8,16,-2,-13,-5,-7,16,16,-4,-12,-6,-19,-10,-3,]),'COMMA':([19,2,31,],[30,10,-18,]),'MINUS':([33,7,0,31,8,34,24,1,16,9,25,2,26,17,18,11,27,3,12,28,4,20,13,29,14,32,6,22,15,],[-17,17,8,-18,8,17,-8,-11,8,-9,-5,-13,-6,8,-7,8,-4,-12,17,-2,-10,-19,8,-3,8,8,8,17,8,]),'$':([31,7,25,33,9,1,2,18,24,3,27,20,4,28,5,26,29,],[-18,-1,-5,-17,-9,-11,-13,-7,-8,-12,-4,-19,-10,-2,0,-6,-3,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       _lr_action[(_x,_k)] = _y
del _lr_action_items

_lr_goto_items = {'Function':([8,10,17,14,0,16,11,13,15,6,32,],[1,19,1,1,1,1,1,1,1,1,1,]),'System_Function':([8,17,14,0,6,32,11,16,13,15,],[9,9,9,9,9,9,9,9,9,9,]),'VariableReference':([13,11,15,6,16,32,17,8,0,14,],[4,4,4,4,4,4,4,4,4,4,]),'arguments':([11,],[21,]),'statement':([0,],[5,]),'expression':([15,13,16,11,6,8,0,14,32,17,],[27,25,28,22,12,18,7,26,34,29,]),'empty':([11,],[23,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       _lr_goto[(_x,_k)] = _y
del _lr_goto_items
_lr_productions = [
  ("S'",1,None,None,None),
  ('statement',1,'p_statement_expr','expressionparser.py',79),
  ('expression',3,'p_expression_binop','expressionparser.py',83),
  ('expression',3,'p_expression_binop','expressionparser.py',84),
  ('expression',3,'p_expression_binop','expressionparser.py',85),
  ('expression',3,'p_expression_binop','expressionparser.py',86),
  ('expression',3,'p_expression_binop','expressionparser.py',87),
  ('expression',2,'p_expression_uminus','expressionparser.py',92),
  ('expression',3,'p_expression_group','expressionparser.py',97),
  ('expression',1,'p_expression_factor','expressionparser.py',102),
  ('expression',1,'p_expression_factor','expressionparser.py',103),
  ('expression',1,'p_expression_factor','expressionparser.py',104),
  ('expression',1,'p_expression_factor','expressionparser.py',105),
  ('expression',1,'p_expression_factor','expressionparser.py',106),
  ('arguments',3,'p_expression_arguments','expressionparser.py',111),
  ('arguments',1,'p_expression_arguments','expressionparser.py',112),
  ('arguments',1,'p_expression_arguments','expressionparser.py',113),
  ('System_Function',5,'p_expression_system_function','expressionparser.py',121),
  ('Function',4,'p_expression_function','expressionparser.py',190),
  ('VariableReference',3,'p_expression_variablereference','expressionparser.py',201),
  ('empty',0,'p_empty','expressionparser.py',274),
]
