#!/usr/bin/env python


"""
A program for converting EML to EM.
This program is part of E-Cell Simulation Environment Version 3.
"""

__program__ = 'ecell3-eml2em'
__version__ = '0.1'
__author__ = 'Kentarou Takahashi and Koichi Takahashi <shafi@e-cell.org>'
__copyright__ = 'Copyright (C) 2002-2004 Keio University'
__license__ = 'GPL'


import os
import sys
import time
import getopt

import ecell.converter.eml2em as conv

def usage():
    aProgramName = os.path.basename( sys.argv[0] )

    print '''
%s -- convert eml to em
    
Usage:
    %s [-h] [-f] [-o outfile] infile

    
Options:
    -h or --help    :  Print this message.
    -f or --force   :  Force overwrite even if outfile already exists.
    -o or --outfile=:  Specify output file name.  '-' means stdout.
    
''' % ( aProgramName, aProgramName )


def main():
    # commandline processing
    try:
        opts, args = getopt.getopt( sys.argv[1:], "hfo:",
                                    ["help","force", "outfile="] )
    except getopt.GetoptError:
        usage()
        sys.exit( 1 )

    anEmFileName = None
    aForceFlag = 0

    for anOption, anArg in opts:
        if anOption in ( "-h", '--help' ):
            usage()
            sys.exit( 0 )

        if anOption in ( "-f", '--force' ):
            aForceFlag = 1            

        if anOption in ( "-o", "--outfile" ):
            anEmFileName = anArg
            
    if len( args ) == 0:
        sys.stderr.write( "No input file.\n" )
        sys.exit( 1 )

    anEmlFileName = args[0]

    anEmlFile = open( anEmlFileName )

    aBaseName = os.path.basename( anEmlFileName )
    aBaseName, anExt = os.path.splitext( aBaseName )

    if anEmFileName == None:
        if anExt == '.eml' or anExt == '.xml':
            anExt = '.em'
        else:
            anExt += '.em'

        anEmFileName = aBaseName + anExt

    if anEmFileName == '-':
        anEmFile = sys.stdout
    else:
        if os.path.isfile( anEmFileName ) and aForceFlag == 0:
            sys.stderr.write( "Output file %s exists. Use -f to overwrite.\n"
                              % anEmFileName )
            sys.exit( 1 )

        anEmFile = open( anEmFileName, 'w' )

    anEmFile.write(
        "# created by eml2em program\n# from file: %s, date: %s\n#\n" \
        % ( anEmlFileName, time.asctime( time.localtime() ) ) )
    anEmFile.write( conv.convert( anEmlFile.read() ) )

if __name__ == '__main__':
    main()
