# Global path environment variables used by E-Cell in MS-Windows
# All variables should be declared in this file, and sourced (merged) from it 
# Author: Satya Arjunan < satya@sfc.keio.ac.jp >

import os
import sys
import _winreg

os.environ['PACKAGE'] = '@PACKAGE@'
os.environ['VERSION'] = '@VERSION@'

# Get installed E-Cell prefix from Windows registry
try:
	key = _winreg.OpenKey( _winreg.HKEY_LOCAL_MACHINE, r'Software\E-Cell3\Settings' )
except:
	print "Could not find E-Cell3 in registry"
	sys.exit(1)

prefix = os.path.abspath( _winreg.QueryValueEx( key, 'ECELL3_PREFIX' )[0] )
_winreg.CloseKey( key )

os.environ['ECELL3_PREFIX']=\
	prefix

os.environ['OSOGOPATH']=\
	os.path.join( prefix, 'lib', 'osogo' )

os.environ['MEPATH']=\
	os.path.join( prefix, 'lib', 'modeleditor' )

os.environ['TLPATH']=\
	os.path.join( prefix, 'lib', 'toollauncher' )

os.environ['LTDL_LIBRARY_PATH']=\
	os.path.join( prefix, 'lib', 'ecell', os.environ['VERSION'] )

os.environ['VVECTORTMPDIR']=\
	os.environ['TMP']

# PYTHONDIR contains E-Cell python modules
# PYTHONDIR is used by dmgen
os.environ['PYTHONDIR']=\
	os.path.join( prefix, 'lib', 'python' + sys.winver, 'site-packages' )

# Include E-Cell, pygtk, and Numeric python module locations in
# Python module search path
os.environ['PYTHONPATH']=\
	os.pathsep.join([
		os.environ['PYTHONDIR'],
		os.path.join( os.environ['PYTHONDIR'], 'Numeric'),
		os.path.join( os.environ['PYTHONDIR'], 'libsbml'),
		os.path.join( os.environ['PYTHONDIR'], 'gtk-2.0')
	])
	
# BOOST_LIBRARIES is used by ecell3-dmc		
os.environ['BOOST_LIBRARIES']=\
	'\"-L' + os.path.join( prefix, 'lib' ) + '\" -lboost_python'


import _winreg

# Get installed Python prefix from Windows registry
try:
	key = _winreg.OpenKey( _winreg.HKEY_LOCAL_MACHINE, \
		r'Software\Python\PythonCore\%d.%d' % (sys.version_info[0], sys.version_info[1]) )
except:
	print "Could not find Python in registry"
	sys.exit(1)

python_prefix = os.path.abspath( _winreg.QueryValue( key, 'InstallPath' ) )
_winreg.CloseKey( key )

# Get installed GTK prefix from Windows registry
try:
	key = _winreg.OpenKey( _winreg.HKEY_LOCAL_MACHINE, r'Software\GTK\2.0' )
except:
	print "Could not find GTK in registry"
	sys.exit(1)

gtk_prefix = os.path.abspath( _winreg.QueryValueEx( key, 'Path' )[0] )
_winreg.CloseKey( key )


# PYTHON_INCLUDES is used by ecell3-dmc, needed by PythonFluxProcess.hpp
os.environ['PYTHON_INCLUDES']=\
	'\"-I' + os.path.join( python_prefix, 'include' ) + '\"'


os.environ['PATH']=\
	os.pathsep.join([
		os.path.join( prefix, 'bin' ),
		os.path.join( prefix, 'lib' ),
		python_prefix,
		os.path.join( gtk_prefix, 'bin' ),
		os.path.join( gtk_prefix, 'lib' ),
		os.environ['PATH']
	])

# Set sys.path to point to all locations of Python modules
# sys.path is critical for any compiled .exe which never envokes Python
sys.path = [
	python_prefix,
	os.environ['PYTHONDIR'],
	os.path.join( os.environ['PYTHONDIR'], 'Numeric'),
	os.path.join( os.environ['PYTHONDIR'], 'gtk-2.0'),
	os.path.join( os.environ['PYTHONDIR'], 'libsbml'),
	os.environ['OSOGOPATH'],
	os.path.join( python_prefix, 'lib', 'site-packages' ),
	os.path.join( python_prefix, 'DLLs' ),
	os.path.join( python_prefix, 'lib' ),
	os.path.join( python_prefix, 'lib', 'plat-win'),
	os.path.join( python_prefix, 'lib', 'lib-tk' )
]

