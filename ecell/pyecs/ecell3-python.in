#!@SHELL@


PACKAGE=@PACKAGE@
VERSION=@VERSION@

prefix=@prefix@
exec_prefix=${prefix}

export ECELL3_PREFIX=${prefix}
export OSOGOPATH=${exec_prefix}/lib/osogo
export MEPATH=${exec_prefix}/lib/modeleditor
export TLPATH=${exec_prefix}/lib/toollauncher
export PYTHONDIR=@pythondir@
export LD_LIBRARY_PATH="${exec_prefix}/lib:${LD_LIBRARY_PATH}"
export PYTHONPATH="$PYTHONDIR:${PYTHONPATH}"
export LTDL_LIBRARY_PATH=".:${ECELL3_DM_PATH}:${prefix}/lib/ecell/${VERSION}:${LTDL_LIBRARY_PATH}"
export VERSION=${VERSION}


PYTHON=@PYTHON@
DEBUGGER=gdb

BASENAME=`basename $0`

ecell3_usage() 
{
cat << EOT_USAGE
$BASENAME ( Package: $PACKAGE, Version: $VERSION )

Invoke python interpreter made ready to import E-CELL module.
('import ecell.ecs' to load the module.)

Usage:

    Basic Usage:

        $BASENAME [OPTIONS]     --> invoke the python interpreter
        $BASENAME -h            --> print this message

    Debugging mode:   (this would only work with gdb)

        If environment variable ECELL_DEBUG is set,

        $BASENAME [PYTHONOPTIONS]

        invokes

        $DEBUGGER $PYTHON 

        with PYTHONOPTIONS passed via debugger's --command= option.

    Profiling mode:   (this would only work on systems with GNU sprof)

        If environment variable ECELL_PROFILE is set to soname of a
        shared library, it does profiling by passing LD_PROFILE and
        LD_PROFILE_OUTPUT.  The profiling output file ./SONAME.profile
        can be inspected by sprof.  
        ex. 
          sprof lib/libecs.so.0 ./libecs.so.0.profile


Configurations:

        PACKAGE         = $PACKAGE
        VERSION         = $VERSION
	PYTHON          = $PYTHON
	PYTHONPATH      = $PYTHONPATH
        DEBUGGER        = $DEBUGGER
	LD_LIBRARY_PATH = $LD_LIBRARY_PATH
	prefix          = $prefix
        pythondir       = $PYTHONDIR
	ECELL3_DM_PATH  = $ECELL3_DM_PATH

        If the environment variable ECELL3_DM_PATH is set to a colon (:)
        separated directory path, it loads dynamic modules from there.

        ex.
	  ECELL3_DM_PATH=/home/user/dm:/home/user/dm_other ecell3

EOT_USAGE
}

cleanup()
{
    echo 'interrupted... cleaning up...'
    if [ $TMPFILE ] ; then
	rm -f $TMPFILE
    fi
    exit 1
}

trap cleanup 2 9 15

if [ "$1" = '-h' ] ; then
    ecell3_usage
    exit 0
fi

if [ $ECELL_PROFILE ] ; then
    export LD_PROFILE_OUTPUT=.
    export LD_PROFILE=$ECELL_PROFILE
    rm -f $LD_PROFILE_OUTPUT/$ECELL_PROFILE.profile
fi

if [ ! $ECELL_DEBUG ] ; then
    exec $PYTHON "$@"
else
    TMPFILE=`mktemp -q /tmp/$BASENAME.XXXXXX`
    if [ $? -ne 0 ]; then
	echo "$BASENAME: Can't create temp file, exiting..."
	exit 1
    fi
    echo "run "$@"" > $TMPFILE
    echo $DEBUGGER --command=$TMPFILE $PYTHON
    $DEBUGGER --command=$TMPFILE $PYTHON
    rm -f $TMPFILE
fi


