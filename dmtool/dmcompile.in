#!/bin/sh


prefix=@prefix@
exec_prefix=@exec_prefix@
libdir=@libdir@


CXX=@CXX@
ORIG_CXXFLAGS="@CXXFLAGS@"
LDADD=-lstdc++
SHLEXT=@LTDL_SHLIB_EXT@  
BASENAME=@BASENAME@
CXXSUFFIX=".cpp"

VERBOSE=1

unset CXXFLAGS


exit_if_failed()
{
    $@
    exitcode=$?
    if [ $exitcode -ne 0 ] ; then
	exit $exitcode
    fi
}


run_command()
{
	if [ $TEST_MODE ] ; then
		echo $@
	else
		[ $VERBOSE ] && echo $@
		$@
	fi
return $?
}

cleanup()
{
	run_command rm -f $OBJ
}

move()
{
	run_command mv -f .libs/$SOBJ .
}

compile()
{
	run_command $CXX $CXXCOMPILEFLAGS -fPIC -c $SRC
}

link()
{
	run_command $CXX -shared $OBJ -o $SOBJ $LDFLAGS
}


help()
{
cat << EOT_USAGE
Compile dynamic module.

Usage:
	`$BASENAME $0` <source.cpp> [compile options]
	`$BASENAME $0` -h|--help

EOT_USAGE

}


######################################################


## check commandline

# at least one argument is required
if [ -z $1 ] ;  then
	help
	exit 1
fi

if [ "$1" = "-h" -o "$1" = "--help" ] ; then
	help
	exit 0
fi

## set names and variables

SRC=$1 ; shift
CLASSNAME=`$BASENAME $SRC $CXXSUFFIX`
OBJ=$CLASSNAME.o
SOBJ=$CLASSNAME$SHLEXT


LDFLAGS="-Wl,-rpath=$libdir,-soname=$SOBJ $LDFLAGS"

if [ $CXXFLAGS ]; then
    CXXCOMPILEFLAGS="$CXXFLAGS $*"
else
    CXXCOMPILEFLAGS="$ORIG_CXXFLAGS $*"
fi


## main routine

exit_if_failed compile

if [ ! -f $OBJ ] ; then
    echo "Error: $OBJ not created by the compiler."
    exit 1
fi

exit_if_failed link

if [ ! -f $SOBJ ] ; then
    echo "Error: $SOBJ not created by the compiler."
    exit 1
fi

cleanup
