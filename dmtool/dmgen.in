#!/bin/sh
#
# dmgen --- a program to docify dynamic module in 
#           E-CELL Simulation Environment Version 3
#
# author:  Tomoya Kitayama <tomo@e-cell.org>
#

PACKAGE=@PACKAGE@
VERSION=@VERSION@

prefix=@prefix@
exec_prefix=@prefix@
pythondir=@pythondir@

SHAREDIR="${prefix}/share/ecell/@VERSION@/template"
BINDIR="${exec_prefix}/bin"
EMPYBIN="${pythondir}/ecell/em.py"
TMPLDIR="${prefix}/share/ecell/@VERSION@/template"

EMPYOPTIONS="--flatten --raw-error"

PYSUFFIX=".py"
EMSUFFIX=".em"
OUTSUFFIX=".cpp"

unset VERBOSE HAVE_TEMPLATE HAVE_PY

help() 
{
cat << EOT_HELP

Usage:
	`basename $0` <classname> [OPTIONS] files...
	`basename $0` -h|--help
Options:
	-d|--dmfilename)    Specify dmfile
	-t|--template)      Specify template (.em) file
        -p|--py)            Specify python script file
	-h|--help)          Print this massage
EOT_HELP
}

#at least one argument is required

if [ -z $1 ] ;then 
    $1
    help;
    echo $1
    exit 1
fi

# print help message
 
if [ "$1" = "-h" -o "$1" = "--help" ] ; then
    help
    exit 0
fi

# get dynamic module class
CLASS=$1
shift

while [ -n "$(echo $1 | grep '-')" ]; do
    case "$1" in
	-d|--dmfile) DMFILE=$2 ; shift 2 ;;
	-t|--template) HAVE_TEMPLATE=yes ; EMFILE=$2 ; shift 2 ;;
	-p|--py) HAVE_PY=yes ; PYFILE=$2 ; shift 2 ;;
	-v|--verbose) VERBOSE=yes ; shift ;;
	-h|--help) help ; exit 0 ;;
	*) echo "Invalid Option! " ; help ; exit 1 ;;
    esac
done

# em command

base=`basename $DMFILE .dm`
outfile=$base$OUTSUFFIX

if [ $HAVE_TEMPLATE ] ; then 
    EMFILE="${EMFILE}"
else
    EMFILE="${TMPLDIR}/${CLASS}/${CLASS}${EMSUFFIX}"
fi

if [ $HAVE_EMPY ] ; then 
    PYFILE="${PYFILE}"
else
    PYFILE="${TMPLDIR}/${CLASS}/${CLASS}${PYSUFFIX}"
fi



command="python $EMPYBIN $EMPYOPTIONS -F $PYFILE -F $DMFILE -o $outfile $EMFILE"

if [ $VERBOSE ] ; then
    echo $command
fi

$command

exit $?

